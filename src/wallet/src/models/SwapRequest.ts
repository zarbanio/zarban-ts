/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SwapRequest
 */
export interface SwapRequest {
    /**
     * Intent to swap
     * @type {string}
     * @memberof SwapRequest
     */
    intent: SwapRequestIntentEnum;
    /**
     * Quote ID, required if intent is Swap
     * @type {string}
     * @memberof SwapRequest
     */
    quoteId?: string;
    /**
     * Trade type
     * @type {string}
     * @memberof SwapRequest
     */
    tradeType?: SwapRequestTradeTypeEnum;
    /**
     * Coin symbol to swap from
     * @type {string}
     * @memberof SwapRequest
     */
    _in?: string;
    /**
     * Coin symbol to swap to
     * @type {string}
     * @memberof SwapRequest
     */
    out?: string;
    /**
     * Amount to swap
     * @type {string}
     * @memberof SwapRequest
     */
    amount?: string;
}


/**
 * @export
 */
export const SwapRequestIntentEnum = {
    SWAP: 'Swap',
    QUOTE: 'Quote',
    PREVIEW: 'Preview'
} as const;
export type SwapRequestIntentEnum = typeof SwapRequestIntentEnum[keyof typeof SwapRequestIntentEnum];

/**
 * @export
 */
export const SwapRequestTradeTypeEnum = {
    EXACT_INPUT: 'ExactInput',
    EXACT_OUTPUT: 'ExactOutput'
} as const;
export type SwapRequestTradeTypeEnum = typeof SwapRequestTradeTypeEnum[keyof typeof SwapRequestTradeTypeEnum];


/**
 * Check if a given object implements the SwapRequest interface.
 */
export function instanceOfSwapRequest(value: object): value is SwapRequest {
    if (!('intent' in value) || value['intent'] === undefined) return false;
    return true;
}

export function SwapRequestFromJSON(json: any): SwapRequest {
    return SwapRequestFromJSONTyped(json, false);
}

export function SwapRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): SwapRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'intent': json['intent'],
        'quoteId': json['quoteId'] == null ? undefined : json['quoteId'],
        'tradeType': json['tradeType'] == null ? undefined : json['tradeType'],
        '_in': json['in'] == null ? undefined : json['in'],
        'out': json['out'] == null ? undefined : json['out'],
        'amount': json['amount'] == null ? undefined : json['amount'],
    };
}

export function SwapRequestToJSON(json: any): SwapRequest {
    return SwapRequestToJSONTyped(json, false);
}

export function SwapRequestToJSONTyped(value?: SwapRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'intent': value['intent'],
        'quoteId': value['quoteId'],
        'tradeType': value['tradeType'],
        'in': value['_in'],
        'out': value['out'],
        'amount': value['amount'],
    };
}

