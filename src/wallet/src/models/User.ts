/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TelegramProfile } from './TelegramProfile';
import {
    TelegramProfileFromJSON,
    TelegramProfileFromJSONTyped,
    TelegramProfileToJSON,
    TelegramProfileToJSONTyped,
} from './TelegramProfile';

/**
 * 
 * @export
 * @interface User
 */
export interface User {
    /**
     * User's first name
     * @type {string}
     * @memberof User
     */
    firstName?: string;
    /**
     * User's last name
     * @type {string}
     * @memberof User
     */
    lastName?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    username?: string;
    /**
     * 
     * @type {string}
     * @memberof User
     */
    phone?: string;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isEmailVerified?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isPhoneVerified?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isKycVerified?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isChild?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isSuperUser?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof User
     */
    isAdmin?: boolean;
    /**
     * 
     * @type {TelegramProfile}
     * @memberof User
     */
    telegram?: TelegramProfile;
}

/**
 * Check if a given object implements the User interface.
 */
export function instanceOfUser(value: object): value is User {
    return true;
}

export function UserFromJSON(json: any): User {
    return UserFromJSONTyped(json, false);
}

export function UserFromJSONTyped(json: any, ignoreDiscriminator: boolean): User {
    if (json == null) {
        return json;
    }
    return {
        
        'firstName': json['firstName'] == null ? undefined : json['firstName'],
        'lastName': json['lastName'] == null ? undefined : json['lastName'],
        'email': json['email'] == null ? undefined : json['email'],
        'username': json['username'] == null ? undefined : json['username'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'isEmailVerified': json['isEmailVerified'] == null ? undefined : json['isEmailVerified'],
        'isPhoneVerified': json['isPhoneVerified'] == null ? undefined : json['isPhoneVerified'],
        'isKycVerified': json['isKycVerified'] == null ? undefined : json['isKycVerified'],
        'isChild': json['isChild'] == null ? undefined : json['isChild'],
        'isSuperUser': json['isSuperUser'] == null ? undefined : json['isSuperUser'],
        'isAdmin': json['isAdmin'] == null ? undefined : json['isAdmin'],
        'telegram': json['telegram'] == null ? undefined : TelegramProfileFromJSON(json['telegram']),
    };
}

export function UserToJSON(json: any): User {
    return UserToJSONTyped(json, false);
}

export function UserToJSONTyped(value?: User | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'firstName': value['firstName'],
        'lastName': value['lastName'],
        'email': value['email'],
        'username': value['username'],
        'phone': value['phone'],
        'isEmailVerified': value['isEmailVerified'],
        'isPhoneVerified': value['isPhoneVerified'],
        'isKycVerified': value['isKycVerified'],
        'isChild': value['isChild'],
        'isSuperUser': value['isSuperUser'],
        'isAdmin': value['isAdmin'],
        'telegram': TelegramProfileToJSON(value['telegram']),
    };
}

