/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Timestamp } from './Timestamp';
import {
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
    TimestampToJSONTyped,
} from './Timestamp';

/**
 * 
 * @export
 * @interface Task
 */
export interface Task {
    /**
     * Task ID
     * @type {string}
     * @memberof Task
     */
    id: string;
    /**
     * Task description
     * @type {string}
     * @memberof Task
     */
    description: string;
    /**
     * Task reward
     * @type {number}
     * @memberof Task
     */
    points: number;
    /**
     * Task status. Possible values "Pending", "Completed"
     * @type {string}
     * @memberof Task
     */
    status: string;
    /**
     * 
     * @type {Timestamp}
     * @memberof Task
     */
    completedAt?: Timestamp;
}

/**
 * Check if a given object implements the Task interface.
 */
export function instanceOfTask(value: object): value is Task {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('points' in value) || value['points'] === undefined) return false;
    if (!('status' in value) || value['status'] === undefined) return false;
    return true;
}

export function TaskFromJSON(json: any): Task {
    return TaskFromJSONTyped(json, false);
}

export function TaskFromJSONTyped(json: any, ignoreDiscriminator: boolean): Task {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'description': json['description'],
        'points': json['points'],
        'status': json['status'],
        'completedAt': json['completedAt'] == null ? undefined : TimestampFromJSON(json['completedAt']),
    };
}

export function TaskToJSON(json: any): Task {
    return TaskToJSONTyped(json, false);
}

export function TaskToJSONTyped(value?: Task | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'description': value['description'],
        'points': value['points'],
        'status': value['status'],
        'completedAt': TimestampToJSON(value['completedAt']),
    };
}

