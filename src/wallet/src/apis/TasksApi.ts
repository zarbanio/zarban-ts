/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TaskResponse,
} from '../models/index';
import {
    TaskResponseFromJSON,
    TaskResponseToJSON,
} from '../models/index';

/**
 * TasksApi - interface
 * 
 * @export
 * @interface TasksApiInterface
 */
export interface TasksApiInterface {
    /**
     * Get the list of tasks.
     * @summary Get tasks
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TasksApiInterface
     */
    getTasksRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskResponse>>;

    /**
     * Get the list of tasks.
     * Get tasks
     */
    getTasks(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskResponse>;

}

/**
 * 
 */
export class TasksApi extends runtime.BaseAPI implements TasksApiInterface {

    /**
     * Get the list of tasks.
     * Get tasks
     */
    async getTasksRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<TaskResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/tasks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => TaskResponseFromJSON(jsonValue));
    }

    /**
     * Get the list of tasks.
     * Get tasks
     */
    async getTasks(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<TaskResponse> {
        const response = await this.getTasksRaw(initOverrides);
        return await response.value();
    }

}
