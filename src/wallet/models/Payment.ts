/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Payment
 */
export interface Payment {
    /**
     * Payment amount
     * @type {string}
     * @memberof Payment
     */
    amount: string;
    /**
     * Payment hash
     * @type {string}
     * @memberof Payment
     */
    hash: string;
    /**
     * Payment URL
     * @type {string}
     * @memberof Payment
     */
    url: string;
    /**
     * Sender first name
     * @type {string}
     * @memberof Payment
     */
    senderFirstName: string;
    /**
     * Payment text
     * @type {string}
     * @memberof Payment
     */
    text: string;
    /**
     * Share URL
     * @type {string}
     * @memberof Payment
     */
    shareUrl: string;
}

/**
 * Check if a given object implements the Payment interface.
 */
export function instanceOfPayment(value: object): value is Payment {
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('hash' in value) || value['hash'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('senderFirstName' in value) || value['senderFirstName'] === undefined) return false;
    if (!('text' in value) || value['text'] === undefined) return false;
    if (!('shareUrl' in value) || value['shareUrl'] === undefined) return false;
    return true;
}

export function PaymentFromJSON(json: any): Payment {
    return PaymentFromJSONTyped(json, false);
}

export function PaymentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Payment {
    if (json == null) {
        return json;
    }
    return {
        
        'amount': json['amount'],
        'hash': json['hash'],
        'url': json['url'],
        'senderFirstName': json['senderFirstName'],
        'text': json['text'],
        'shareUrl': json['shareUrl'],
    };
}

export function PaymentToJSON(json: any): Payment {
    return PaymentToJSONTyped(json, false);
}

export function PaymentToJSONTyped(value?: Payment | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'amount': value['amount'],
        'hash': value['hash'],
        'url': value['url'],
        'senderFirstName': value['senderFirstName'],
        'text': value['text'],
        'shareUrl': value['shareUrl'],
    };
}

