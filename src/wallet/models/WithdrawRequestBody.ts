/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WithdrawRequestBody
 */
export interface WithdrawRequestBody {
    /**
     * Network to withdraw
     * @type {string}
     * @memberof WithdrawRequestBody
     */
    network: string;
    /**
     * Coin symbol
     * @type {string}
     * @memberof WithdrawRequestBody
     */
    symbol: string;
    /**
     * Amount to withdraw
     * @type {string}
     * @memberof WithdrawRequestBody
     */
    amount: string;
    /**
     * Withdrawal address
     * @type {string}
     * @memberof WithdrawRequestBody
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof WithdrawRequestBody
     */
    comment?: string | null;
}

/**
 * Check if a given object implements the WithdrawRequestBody interface.
 */
export function instanceOfWithdrawRequestBody(value: object): value is WithdrawRequestBody {
    if (!('network' in value) || value['network'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('address' in value) || value['address'] === undefined) return false;
    return true;
}

export function WithdrawRequestBodyFromJSON(json: any): WithdrawRequestBody {
    return WithdrawRequestBodyFromJSONTyped(json, false);
}

export function WithdrawRequestBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): WithdrawRequestBody {
    if (json == null) {
        return json;
    }
    return {
        
        'network': json['network'],
        'symbol': json['symbol'],
        'amount': json['amount'],
        'address': json['address'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function WithdrawRequestBodyToJSON(json: any): WithdrawRequestBody {
    return WithdrawRequestBodyToJSONTyped(json, false);
}

export function WithdrawRequestBodyToJSONTyped(value?: WithdrawRequestBody | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'network': value['network'],
        'symbol': value['symbol'],
        'amount': value['amount'],
        'address': value['address'],
        'comment': value['comment'],
    };
}

