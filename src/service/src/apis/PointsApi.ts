/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  Scoreboard,
} from '../models/index';
import {
    ScoreboardFromJSON,
    ScoreboardToJSON,
} from '../models/index';

/**
 * PointsApi - interface
 * 
 * @export
 * @interface PointsApiInterface
 */
export interface PointsApiInterface {
    /**
     * Get scoreboard
     * @summary Get scoreboard
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PointsApiInterface
     */
    getScoreboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Scoreboard>>;

    /**
     * Get scoreboard
     * Get scoreboard
     */
    getScoreboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Scoreboard>;

}

/**
 * 
 */
export class PointsApi extends runtime.BaseAPI implements PointsApiInterface {

    /**
     * Get scoreboard
     * Get scoreboard
     */
    async getScoreboardRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Scoreboard>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v2/points/scoreboard`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ScoreboardFromJSON(jsonValue));
    }

    /**
     * Get scoreboard
     * Get scoreboard
     */
    async getScoreboard(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Scoreboard> {
        const response = await this.getScoreboardRaw(initOverrides);
        return await response.value();
    }

}
