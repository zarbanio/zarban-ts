/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Token } from './Token';
import {
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
    TokenToJSONTyped,
} from './Token';

/**
 * 
 * @export
 * @interface LendingpoolBorrow
 */
export interface LendingpoolBorrow {
    /**
     * The Ethereum address of the user.
     * @type {string}
     * @memberof LendingpoolBorrow
     */
    user: string;
    /**
     * 
     * @type {Token}
     * @memberof LendingpoolBorrow
     */
    underlyingAsset: Token;
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof LendingpoolBorrow
     */
    amount: { [key: string]: string | undefined; };
    /**
     * The borrow rate.
     * @type {string}
     * @memberof LendingpoolBorrow
     */
    borrowRate: string;
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof LendingpoolBorrow
     */
    maxBorrowAmount: { [key: string]: string | undefined; };
}

/**
 * Check if a given object implements the LendingpoolBorrow interface.
 */
export function instanceOfLendingpoolBorrow(value: object): value is LendingpoolBorrow {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('underlyingAsset' in value) || value['underlyingAsset'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('borrowRate' in value) || value['borrowRate'] === undefined) return false;
    if (!('maxBorrowAmount' in value) || value['maxBorrowAmount'] === undefined) return false;
    return true;
}

export function LendingpoolBorrowFromJSON(json: any): LendingpoolBorrow {
    return LendingpoolBorrowFromJSONTyped(json, false);
}

export function LendingpoolBorrowFromJSONTyped(json: any, ignoreDiscriminator: boolean): LendingpoolBorrow {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'],
        'underlyingAsset': TokenFromJSON(json['underlyingAsset']),
        'amount': json['amount'],
        'borrowRate': json['borrowRate'],
        'maxBorrowAmount': json['maxBorrowAmount'],
    };
}

export function LendingpoolBorrowToJSON(json: any): LendingpoolBorrow {
    return LendingpoolBorrowToJSONTyped(json, false);
}

export function LendingpoolBorrowToJSONTyped(value?: LendingpoolBorrow | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': value['user'],
        'underlyingAsset': TokenToJSON(value['underlyingAsset']),
        'amount': value['amount'],
        'borrowRate': value['borrowRate'],
        'maxBorrowAmount': value['maxBorrowAmount'],
    };
}

