/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MethodParameters } from './MethodParameters';
import {
    MethodParametersFromJSON,
    MethodParametersFromJSONTyped,
    MethodParametersToJSON,
    MethodParametersToJSONTyped,
} from './MethodParameters';

/**
 * 
 * @export
 * @interface PreparedTx
 */
export interface PreparedTx {
    /**
     * 
     * @type {string}
     * @memberof PreparedTx
     */
    type: string;
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof PreparedTx
     */
    label: { [key: string]: string | undefined; };
    /**
     * 
     * @type {number}
     * @memberof PreparedTx
     */
    gasUseEstimate: number;
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof PreparedTx
     */
    gasFeeEstimate: { [key: string]: string | undefined; };
    /**
     * 
     * @type {MethodParameters}
     * @memberof PreparedTx
     */
    methodParameters: MethodParameters;
}

/**
 * Check if a given object implements the PreparedTx interface.
 */
export function instanceOfPreparedTx(value: object): value is PreparedTx {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('label' in value) || value['label'] === undefined) return false;
    if (!('gasUseEstimate' in value) || value['gasUseEstimate'] === undefined) return false;
    if (!('gasFeeEstimate' in value) || value['gasFeeEstimate'] === undefined) return false;
    if (!('methodParameters' in value) || value['methodParameters'] === undefined) return false;
    return true;
}

export function PreparedTxFromJSON(json: any): PreparedTx {
    return PreparedTxFromJSONTyped(json, false);
}

export function PreparedTxFromJSONTyped(json: any, ignoreDiscriminator: boolean): PreparedTx {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'label': json['label'],
        'gasUseEstimate': json['gasUseEstimate'],
        'gasFeeEstimate': json['gasFeeEstimate'],
        'methodParameters': MethodParametersFromJSON(json['methodParameters']),
    };
}

export function PreparedTxToJSON(json: any): PreparedTx {
    return PreparedTxToJSONTyped(json, false);
}

export function PreparedTxToJSONTyped(value?: PreparedTx | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'label': value['label'],
        'gasUseEstimate': value['gasUseEstimate'],
        'gasFeeEstimate': value['gasFeeEstimate'],
        'methodParameters': MethodParametersToJSON(value['methodParameters']),
    };
}

