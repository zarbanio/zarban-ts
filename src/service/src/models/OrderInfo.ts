/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Timestamp } from './Timestamp';
import {
    TimestampFromJSON,
    TimestampFromJSONTyped,
    TimestampToJSON,
    TimestampToJSONTyped,
} from './Timestamp';
import type { DutchAmount } from './DutchAmount';
import {
    DutchAmountFromJSON,
    DutchAmountFromJSONTyped,
    DutchAmountToJSON,
    DutchAmountToJSONTyped,
} from './DutchAmount';

/**
 * 
 * @export
 * @interface OrderInfo
 */
export interface OrderInfo {
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    chainId: number;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    permit2Address: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    reactor: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    swapper: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    nonce: string;
    /**
     * 
     * @type {Timestamp}
     * @memberof OrderInfo
     */
    deadline: Timestamp;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    additionalValidationContract: string;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    additionalValidationData: string;
    /**
     * 
     * @type {Timestamp}
     * @memberof OrderInfo
     */
    decayStartTime: Timestamp;
    /**
     * 
     * @type {Timestamp}
     * @memberof OrderInfo
     */
    decayEndTime: Timestamp;
    /**
     * 
     * @type {string}
     * @memberof OrderInfo
     */
    exclusiveFiller: string;
    /**
     * 
     * @type {number}
     * @memberof OrderInfo
     */
    exclusivityOverrideBps: number;
    /**
     * 
     * @type {DutchAmount}
     * @memberof OrderInfo
     */
    input: DutchAmount;
    /**
     * 
     * @type {Array<DutchAmount>}
     * @memberof OrderInfo
     */
    outputs: Array<DutchAmount>;
}

/**
 * Check if a given object implements the OrderInfo interface.
 */
export function instanceOfOrderInfo(value: object): value is OrderInfo {
    if (!('chainId' in value) || value['chainId'] === undefined) return false;
    if (!('permit2Address' in value) || value['permit2Address'] === undefined) return false;
    if (!('reactor' in value) || value['reactor'] === undefined) return false;
    if (!('swapper' in value) || value['swapper'] === undefined) return false;
    if (!('nonce' in value) || value['nonce'] === undefined) return false;
    if (!('deadline' in value) || value['deadline'] === undefined) return false;
    if (!('additionalValidationContract' in value) || value['additionalValidationContract'] === undefined) return false;
    if (!('additionalValidationData' in value) || value['additionalValidationData'] === undefined) return false;
    if (!('decayStartTime' in value) || value['decayStartTime'] === undefined) return false;
    if (!('decayEndTime' in value) || value['decayEndTime'] === undefined) return false;
    if (!('exclusiveFiller' in value) || value['exclusiveFiller'] === undefined) return false;
    if (!('exclusivityOverrideBps' in value) || value['exclusivityOverrideBps'] === undefined) return false;
    if (!('input' in value) || value['input'] === undefined) return false;
    if (!('outputs' in value) || value['outputs'] === undefined) return false;
    return true;
}

export function OrderInfoFromJSON(json: any): OrderInfo {
    return OrderInfoFromJSONTyped(json, false);
}

export function OrderInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'chainId': json['chainId'],
        'permit2Address': json['permit2Address'],
        'reactor': json['reactor'],
        'swapper': json['swapper'],
        'nonce': json['nonce'],
        'deadline': TimestampFromJSON(json['deadline']),
        'additionalValidationContract': json['additionalValidationContract'],
        'additionalValidationData': json['additionalValidationData'],
        'decayStartTime': TimestampFromJSON(json['decayStartTime']),
        'decayEndTime': TimestampFromJSON(json['decayEndTime']),
        'exclusiveFiller': json['exclusiveFiller'],
        'exclusivityOverrideBps': json['exclusivityOverrideBps'],
        'input': DutchAmountFromJSON(json['input']),
        'outputs': ((json['outputs'] as Array<any>).map(DutchAmountFromJSON)),
    };
}

export function OrderInfoToJSON(json: any): OrderInfo {
    return OrderInfoToJSONTyped(json, false);
}

export function OrderInfoToJSONTyped(value?: OrderInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'chainId': value['chainId'],
        'permit2Address': value['permit2Address'],
        'reactor': value['reactor'],
        'swapper': value['swapper'],
        'nonce': value['nonce'],
        'deadline': TimestampToJSON(value['deadline']),
        'additionalValidationContract': value['additionalValidationContract'],
        'additionalValidationData': value['additionalValidationData'],
        'decayStartTime': TimestampToJSON(value['decayStartTime']),
        'decayEndTime': TimestampToJSON(value['decayEndTime']),
        'exclusiveFiller': value['exclusiveFiller'],
        'exclusivityOverrideBps': value['exclusivityOverrideBps'],
        'input': DutchAmountToJSON(value['input']),
        'outputs': ((value['outputs'] as Array<any>).map(DutchAmountToJSON)),
    };
}

