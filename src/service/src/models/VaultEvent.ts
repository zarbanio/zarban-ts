/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Ilk } from './Ilk';
import {
    IlkFromJSON,
    IlkFromJSONTyped,
    IlkToJSON,
    IlkToJSONTyped,
} from './Ilk';

/**
 * 
 * @export
 * @interface VaultEvent
 */
export interface VaultEvent {
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof VaultEvent
     */
    deltaCollateral: { [key: string]: string | undefined; };
    /**
     * 
     * @type {{ [key: string]: string | undefined; }}
     * @memberof VaultEvent
     */
    deltaDebt: { [key: string]: string | undefined; };
    /**
     * 
     * @type {Ilk}
     * @memberof VaultEvent
     */
    ilk: Ilk;
}

/**
 * Check if a given object implements the VaultEvent interface.
 */
export function instanceOfVaultEvent(value: object): value is VaultEvent {
    if (!('deltaCollateral' in value) || value['deltaCollateral'] === undefined) return false;
    if (!('deltaDebt' in value) || value['deltaDebt'] === undefined) return false;
    if (!('ilk' in value) || value['ilk'] === undefined) return false;
    return true;
}

export function VaultEventFromJSON(json: any): VaultEvent {
    return VaultEventFromJSONTyped(json, false);
}

export function VaultEventFromJSONTyped(json: any, ignoreDiscriminator: boolean): VaultEvent {
    if (json == null) {
        return json;
    }
    return {
        
        'deltaCollateral': json['deltaCollateral'],
        'deltaDebt': json['deltaDebt'],
        'ilk': IlkFromJSON(json['ilk']),
    };
}

export function VaultEventToJSON(json: any): VaultEvent {
    return VaultEventToJSONTyped(json, false);
}

export function VaultEventToJSONTyped(value?: VaultEvent | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'deltaCollateral': value['deltaCollateral'],
        'deltaDebt': value['deltaDebt'],
        'ilk': IlkToJSON(value['ilk']),
    };
}

