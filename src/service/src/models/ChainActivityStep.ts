/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ChainActivityStepData } from './ChainActivityStepData';
import {
    ChainActivityStepDataFromJSON,
    ChainActivityStepDataFromJSONTyped,
    ChainActivityStepDataToJSON,
    ChainActivityStepDataToJSONTyped,
} from './ChainActivityStepData';

/**
 * 
 * @export
 * @interface ChainActivityStep
 */
export interface ChainActivityStep {
    /**
     * 
     * @type {string}
     * @memberof ChainActivityStep
     */
    type: ChainActivityStepTypeEnum;
    /**
     * 
     * @type {ChainActivityStepData}
     * @memberof ChainActivityStep
     */
    data: ChainActivityStepData;
}


/**
 * @export
 */
export const ChainActivityStepTypeEnum = {
    PREPARED_TX: 'PreparedTx',
    EIP712_SIGN_REQUEST: 'EIP712SignRequest',
    PERSONAL_SIGN_REQUEST: 'PersonalSignRequest'
} as const;
export type ChainActivityStepTypeEnum = typeof ChainActivityStepTypeEnum[keyof typeof ChainActivityStepTypeEnum];


/**
 * Check if a given object implements the ChainActivityStep interface.
 */
export function instanceOfChainActivityStep(value: object): value is ChainActivityStep {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('data' in value) || value['data'] === undefined) return false;
    return true;
}

export function ChainActivityStepFromJSON(json: any): ChainActivityStep {
    return ChainActivityStepFromJSONTyped(json, false);
}

export function ChainActivityStepFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChainActivityStep {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'data': ChainActivityStepDataFromJSON(json['data']),
    };
}

export function ChainActivityStepToJSON(json: any): ChainActivityStep {
    return ChainActivityStepToJSONTyped(json, false);
}

export function ChainActivityStepToJSONTyped(value?: ChainActivityStep | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'data': ChainActivityStepDataToJSON(value['data']),
    };
}

