/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Symbol representation
 * @export
 */
export const Symbol = {
    Usd: 'USD',
    Dai: 'DAI',
    Usdt: 'USDT',
    Usdc: 'USDC',
    Wbtc: 'WBTC',
    Eth: 'ETH',
    Weth: 'WETH',
    Zar: 'ZAR',
    Tmn: 'TMN'
} as const;
export type Symbol = typeof Symbol[keyof typeof Symbol];


export function instanceOfSymbol(value: any): boolean {
    for (const key in Symbol) {
        if (Object.prototype.hasOwnProperty.call(Symbol, key)) {
            if (Symbol[key as keyof typeof Symbol] === value) {
                return true;
            }
        }
    }
    return false;
}

export function SymbolFromJSON(json: any): Symbol {
    return SymbolFromJSONTyped(json, false);
}

export function SymbolFromJSONTyped(json: any, ignoreDiscriminator: boolean): Symbol {
    return json as Symbol;
}

export function SymbolToJSON(value?: Symbol | null): any {
    return value as any;
}

export function SymbolToJSONTyped(value: any, ignoreDiscriminator: boolean): Symbol {
    return value as Symbol;
}

