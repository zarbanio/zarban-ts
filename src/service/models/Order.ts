/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RawDutchAmount } from './RawDutchAmount';
import {
    RawDutchAmountFromJSON,
    RawDutchAmountFromJSONTyped,
    RawDutchAmountToJSON,
    RawDutchAmountToJSONTyped,
} from './RawDutchAmount';

/**
 * 
 * @export
 * @interface Order
 */
export interface Order {
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    quoteId?: string;
    /**
     * 
     * @type {Array<RawDutchAmount>}
     * @memberof Order
     */
    outputs: Array<RawDutchAmount>;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    encodedOrder: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    signature: string;
    /**
     * 
     * @type {RawDutchAmount}
     * @memberof Order
     */
    input: RawDutchAmount;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    orderStatus: OrderOrderStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof Order
     */
    chainId: number;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    orderHash: string;
    /**
     * 
     * @type {string}
     * @memberof Order
     */
    orderType: OrderOrderTypeEnum;
}


/**
 * @export
 */
export const OrderOrderStatusEnum = {
    Open: 'open',
    Expired: 'expired',
    Error: 'error',
    Cancelled: 'cancelled',
    Filled: 'filled',
    InsufficientFunds: 'insufficient-funds'
} as const;
export type OrderOrderStatusEnum = typeof OrderOrderStatusEnum[keyof typeof OrderOrderStatusEnum];

/**
 * @export
 */
export const OrderOrderTypeEnum = {
    Dutch: 'dutch',
    Limit: 'limit'
} as const;
export type OrderOrderTypeEnum = typeof OrderOrderTypeEnum[keyof typeof OrderOrderTypeEnum];


/**
 * Check if a given object implements the Order interface.
 */
export function instanceOfOrder(value: object): value is Order {
    if (!('outputs' in value) || value['outputs'] === undefined) return false;
    if (!('encodedOrder' in value) || value['encodedOrder'] === undefined) return false;
    if (!('signature' in value) || value['signature'] === undefined) return false;
    if (!('input' in value) || value['input'] === undefined) return false;
    if (!('orderStatus' in value) || value['orderStatus'] === undefined) return false;
    if (!('chainId' in value) || value['chainId'] === undefined) return false;
    if (!('orderHash' in value) || value['orderHash'] === undefined) return false;
    if (!('orderType' in value) || value['orderType'] === undefined) return false;
    return true;
}

export function OrderFromJSON(json: any): Order {
    return OrderFromJSONTyped(json, false);
}

export function OrderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Order {
    if (json == null) {
        return json;
    }
    return {
        
        'quoteId': json['quoteId'] == null ? undefined : json['quoteId'],
        'outputs': ((json['outputs'] as Array<any>).map(RawDutchAmountFromJSON)),
        'encodedOrder': json['encodedOrder'],
        'signature': json['signature'],
        'input': RawDutchAmountFromJSON(json['input']),
        'orderStatus': json['orderStatus'],
        'chainId': json['chainId'],
        'orderHash': json['orderHash'],
        'orderType': json['orderType'],
    };
}

export function OrderToJSON(json: any): Order {
    return OrderToJSONTyped(json, false);
}

export function OrderToJSONTyped(value?: Order | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'quoteId': value['quoteId'],
        'outputs': ((value['outputs'] as Array<any>).map(RawDutchAmountToJSON)),
        'encodedOrder': value['encodedOrder'],
        'signature': value['signature'],
        'input': RawDutchAmountToJSON(value['input']),
        'orderStatus': value['orderStatus'],
        'chainId': value['chainId'],
        'orderHash': value['orderHash'],
        'orderType': value['orderType'],
    };
}

