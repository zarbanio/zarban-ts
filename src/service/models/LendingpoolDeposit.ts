/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Token } from './Token';
import {
    TokenFromJSON,
    TokenFromJSONTyped,
    TokenToJSON,
    TokenToJSONTyped,
} from './Token';

/**
 * 
 * @export
 * @interface LendingpoolDeposit
 */
export interface LendingpoolDeposit {
    /**
     * The Ethereum address of the user.
     * @type {string}
     * @memberof LendingpoolDeposit
     */
    user: string;
    /**
     * 
     * @type {Token}
     * @memberof LendingpoolDeposit
     */
    underlyingAsset: Token;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof LendingpoolDeposit
     */
    amount: { [key: string]: string; };
    /**
     * Whether the user has enabled the asset as collateral.
     * @type {boolean}
     * @memberof LendingpoolDeposit
     */
    usageAsCollateralEnabledOnUser: boolean;
    /**
     * The supply APY.
     * @type {string}
     * @memberof LendingpoolDeposit
     */
    supplyAPY: string;
}

/**
 * Check if a given object implements the LendingpoolDeposit interface.
 */
export function instanceOfLendingpoolDeposit(value: object): value is LendingpoolDeposit {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('underlyingAsset' in value) || value['underlyingAsset'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('usageAsCollateralEnabledOnUser' in value) || value['usageAsCollateralEnabledOnUser'] === undefined) return false;
    if (!('supplyAPY' in value) || value['supplyAPY'] === undefined) return false;
    return true;
}

export function LendingpoolDepositFromJSON(json: any): LendingpoolDeposit {
    return LendingpoolDepositFromJSONTyped(json, false);
}

export function LendingpoolDepositFromJSONTyped(json: any, ignoreDiscriminator: boolean): LendingpoolDeposit {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'],
        'underlyingAsset': TokenFromJSON(json['underlyingAsset']),
        'amount': json['amount'],
        'usageAsCollateralEnabledOnUser': json['usageAsCollateralEnabledOnUser'],
        'supplyAPY': json['supplyAPY'],
    };
}

export function LendingpoolDepositToJSON(json: any): LendingpoolDeposit {
    return LendingpoolDepositToJSONTyped(json, false);
}

export function LendingpoolDepositToJSONTyped(value?: LendingpoolDeposit | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': value['user'],
        'underlyingAsset': TokenToJSON(value['underlyingAsset']),
        'amount': value['amount'],
        'usageAsCollateralEnabledOnUser': value['usageAsCollateralEnabledOnUser'],
        'supplyAPY': value['supplyAPY'],
    };
}

