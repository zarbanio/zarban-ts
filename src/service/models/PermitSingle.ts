/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { TypedData } from './TypedData';
import {
    TypedDataFromJSON,
    TypedDataFromJSONTyped,
    TypedDataToJSON,
    TypedDataToJSONTyped,
} from './TypedData';

/**
 * 
 * @export
 * @interface PermitSingle
 */
export interface PermitSingle {
    /**
     * 
     * @type {TypedData}
     * @memberof PermitSingle
     */
    typedData: TypedData;
    /**
     * The hash of the permit that needs to be signed
     * @type {string}
     * @memberof PermitSingle
     */
    hash: string;
}

/**
 * Check if a given object implements the PermitSingle interface.
 */
export function instanceOfPermitSingle(value: object): value is PermitSingle {
    if (!('typedData' in value) || value['typedData'] === undefined) return false;
    if (!('hash' in value) || value['hash'] === undefined) return false;
    return true;
}

export function PermitSingleFromJSON(json: any): PermitSingle {
    return PermitSingleFromJSONTyped(json, false);
}

export function PermitSingleFromJSONTyped(json: any, ignoreDiscriminator: boolean): PermitSingle {
    if (json == null) {
        return json;
    }
    return {
        
        'typedData': TypedDataFromJSON(json['typedData']),
        'hash': json['hash'],
    };
}

export function PermitSingleToJSON(json: any): PermitSingle {
    return PermitSingleToJSONTyped(json, false);
}

export function PermitSingleToJSONTyped(value?: PermitSingle | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'typedData': TypedDataToJSON(value['typedData']),
        'hash': value['hash'],
    };
}

