/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StablecoinSystemTakeTxRequest
 */
export interface StablecoinSystemTakeTxRequest {
    /**
     * Ethereum address of the user taking the auction.
     * @type {string}
     * @memberof StablecoinSystemTakeTxRequest
     */
    user: string;
    /**
     * The ID of the auction
     * @type {number}
     * @memberof StablecoinSystemTakeTxRequest
     */
    auctionId: number;
    /**
     * Name of the ILK
     * @type {string}
     * @memberof StablecoinSystemTakeTxRequest
     */
    ilk: string;
    /**
     * upper limit on the amount of collateral to buy [wad]
     * @type {string}
     * @memberof StablecoinSystemTakeTxRequest
     */
    collateralAmountUpperLimit: string;
    /**
     * Maximum acceptable price (ZAR / collateral) [ray]
     * @type {string}
     * @memberof StablecoinSystemTakeTxRequest
     */
    maxAcceptablePrice: string;
}

/**
 * Check if a given object implements the StablecoinSystemTakeTxRequest interface.
 */
export function instanceOfStablecoinSystemTakeTxRequest(value: object): value is StablecoinSystemTakeTxRequest {
    if (!('user' in value) || value['user'] === undefined) return false;
    if (!('auctionId' in value) || value['auctionId'] === undefined) return false;
    if (!('ilk' in value) || value['ilk'] === undefined) return false;
    if (!('collateralAmountUpperLimit' in value) || value['collateralAmountUpperLimit'] === undefined) return false;
    if (!('maxAcceptablePrice' in value) || value['maxAcceptablePrice'] === undefined) return false;
    return true;
}

export function StablecoinSystemTakeTxRequestFromJSON(json: any): StablecoinSystemTakeTxRequest {
    return StablecoinSystemTakeTxRequestFromJSONTyped(json, false);
}

export function StablecoinSystemTakeTxRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StablecoinSystemTakeTxRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'user': json['user'],
        'auctionId': json['auctionId'],
        'ilk': json['ilk'],
        'collateralAmountUpperLimit': json['collateralAmountUpperLimit'],
        'maxAcceptablePrice': json['maxAcceptablePrice'],
    };
}

export function StablecoinSystemTakeTxRequestToJSON(json: any): StablecoinSystemTakeTxRequest {
    return StablecoinSystemTakeTxRequestToJSONTyped(json, false);
}

export function StablecoinSystemTakeTxRequestToJSONTyped(value?: StablecoinSystemTakeTxRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user': value['user'],
        'auctionId': value['auctionId'],
        'ilk': value['ilk'],
        'collateralAmountUpperLimit': value['collateralAmountUpperLimit'],
        'maxAcceptablePrice': value['maxAcceptablePrice'],
    };
}

