/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { Symbol } from './symbol';

export class Ilk {
    /**
    * Name of the ILK
    */
    'name': string;
    'symbol': Symbol;
    /**
    * Minimum Collateralization Ratio
    */
    'minimumCollateralizationRatio': string;
    /**
    * Maximum Loan To Value
    */
    'maximumLoanToValue': string;
    /**
    * Liquidation Penalty
    */
    'liquidationPenalty': string;
    'debtCeiling': { [key: string]: string; };
    'debt': { [key: string]: string; };
    /**
    * Annual Stability Fee
    */
    'annualStabilityFee': string;
    'dustLimit': { [key: string]: string; };
    'price': { [key: string]: string; };
    'nextPrice': { [key: string]: string; };
    /**
    * Join Address
    */
    'join': string;
    /**
    * Median Address
    */
    'median': string;
    /**
    * Gem Address
    */
    'gem': string;
    /**
    * Clipper Address
    */
    'clipper': string;
    /**
    * Pip Address
    */
    'pip': string;
    'hole': { [key: string]: string; };
    'dirt': { [key: string]: string; };
    'availableToBorrow': { [key: string]: string; };

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "symbol",
            "baseName": "symbol",
            "type": "Symbol"
        },
        {
            "name": "minimumCollateralizationRatio",
            "baseName": "minimumCollateralizationRatio",
            "type": "string"
        },
        {
            "name": "maximumLoanToValue",
            "baseName": "maximumLoanToValue",
            "type": "string"
        },
        {
            "name": "liquidationPenalty",
            "baseName": "liquidationPenalty",
            "type": "string"
        },
        {
            "name": "debtCeiling",
            "baseName": "debtCeiling",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "debt",
            "baseName": "debt",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "annualStabilityFee",
            "baseName": "annualStabilityFee",
            "type": "string"
        },
        {
            "name": "dustLimit",
            "baseName": "dustLimit",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "nextPrice",
            "baseName": "nextPrice",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "join",
            "baseName": "join",
            "type": "string"
        },
        {
            "name": "median",
            "baseName": "median",
            "type": "string"
        },
        {
            "name": "gem",
            "baseName": "gem",
            "type": "string"
        },
        {
            "name": "clipper",
            "baseName": "clipper",
            "type": "string"
        },
        {
            "name": "pip",
            "baseName": "pip",
            "type": "string"
        },
        {
            "name": "hole",
            "baseName": "hole",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "dirt",
            "baseName": "dirt",
            "type": "{ [key: string]: string; }"
        },
        {
            "name": "availableToBorrow",
            "baseName": "availableToBorrow",
            "type": "{ [key: string]: string; }"
        }    ];

    static getAttributeTypeMap() {
        return Ilk.attributeTypeMap;
    }
}

export namespace Ilk {
}
