"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfToken = instanceOfToken;
exports.TokenFromJSON = TokenFromJSON;
exports.TokenFromJSONTyped = TokenFromJSONTyped;
exports.TokenToJSON = TokenToJSON;
exports.TokenToJSONTyped = TokenToJSONTyped;
const Symbol_1 = require("./Symbol");
/**
 * Check if a given object implements the Token interface.
 */
function instanceOfToken(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('symbol' in value) || value['symbol'] === undefined)
        return false;
    if (!('decimals' in value) || value['decimals'] === undefined)
        return false;
    if (!('address' in value) || value['address'] === undefined)
        return false;
    if (!('logoUri' in value) || value['logoUri'] === undefined)
        return false;
    if (!('chainId' in value) || value['chainId'] === undefined)
        return false;
    if (!('persianName' in value) || value['persianName'] === undefined)
        return false;
    return true;
}
function TokenFromJSON(json) {
    return TokenFromJSONTyped(json, false);
}
function TokenFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'symbol': (0, Symbol_1.SymbolFromJSON)(json['symbol']),
        'decimals': json['decimals'],
        'address': json['address'],
        'logoUri': json['logoUri'],
        'chainId': json['chainId'],
        'persianName': json['persianName'],
    };
}
function TokenToJSON(json) {
    return TokenToJSONTyped(json, false);
}
function TokenToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'symbol': (0, Symbol_1.SymbolToJSON)(value['symbol']),
        'decimals': value['decimals'],
        'address': value['address'],
        'logoUri': value['logoUri'],
        'chainId': value['chainId'],
        'persianName': value['persianName'],
    };
}
//# sourceMappingURL=Token.js.map