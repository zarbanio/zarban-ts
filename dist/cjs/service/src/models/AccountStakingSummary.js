"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfAccountStakingSummary = instanceOfAccountStakingSummary;
exports.AccountStakingSummaryFromJSON = AccountStakingSummaryFromJSON;
exports.AccountStakingSummaryFromJSONTyped = AccountStakingSummaryFromJSONTyped;
exports.AccountStakingSummaryToJSON = AccountStakingSummaryToJSON;
exports.AccountStakingSummaryToJSONTyped = AccountStakingSummaryToJSONTyped;
/**
 * Check if a given object implements the AccountStakingSummary interface.
 */
function instanceOfAccountStakingSummary(value) {
    if (!('totalStake' in value) || value['totalStake'] === undefined)
        return false;
    if (!('unclaimedReward' in value) || value['unclaimedReward'] === undefined)
        return false;
    if (!('netApy' in value) || value['netApy'] === undefined)
        return false;
    return true;
}
function AccountStakingSummaryFromJSON(json) {
    return AccountStakingSummaryFromJSONTyped(json, false);
}
function AccountStakingSummaryFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'totalStake': json['totalStake'],
        'unclaimedReward': json['unclaimedReward'],
        'netApy': json['netApy'],
    };
}
function AccountStakingSummaryToJSON(json) {
    return AccountStakingSummaryToJSONTyped(json, false);
}
function AccountStakingSummaryToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'totalStake': value['totalStake'],
        'unclaimedReward': value['unclaimedReward'],
        'netApy': value['netApy'],
    };
}
//# sourceMappingURL=AccountStakingSummary.js.map