"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQuoteResponse = instanceOfQuoteResponse;
exports.QuoteResponseFromJSON = QuoteResponseFromJSON;
exports.QuoteResponseFromJSONTyped = QuoteResponseFromJSONTyped;
exports.QuoteResponseToJSON = QuoteResponseToJSON;
exports.QuoteResponseToJSONTyped = QuoteResponseToJSONTyped;
const OrderType_1 = require("./OrderType");
const TypedData_1 = require("./TypedData");
const RouteItem_1 = require("./RouteItem");
const OrderInfo_1 = require("./OrderInfo");
const MethodParameters_1 = require("./MethodParameters");
const TradeType_1 = require("./TradeType");
const Timestamp_1 = require("./Timestamp");
/**
 * Check if a given object implements the QuoteResponse interface.
 */
function instanceOfQuoteResponse(value) {
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('tradeType' in value) || value['tradeType'] === undefined)
        return false;
    if (!('time' in value) || value['time'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('quote' in value) || value['quote'] === undefined)
        return false;
    if (!('quoteId' in value) || value['quoteId'] === undefined)
        return false;
    if (!('gasPrice' in value) || value['gasPrice'] === undefined)
        return false;
    if (!('gasUseEstimate' in value) || value['gasUseEstimate'] === undefined)
        return false;
    if (!('gasFeeEstimate' in value) || value['gasFeeEstimate'] === undefined)
        return false;
    if (!('routeString' in value) || value['routeString'] === undefined)
        return false;
    if (!('route' in value) || value['route'] === undefined)
        return false;
    return true;
}
function QuoteResponseFromJSON(json) {
    return QuoteResponseFromJSONTyped(json, false);
}
function QuoteResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'type': (0, OrderType_1.OrderTypeFromJSON)(json['type']),
        'tradeType': (0, TradeType_1.TradeTypeFromJSON)(json['tradeType']),
        'time': (0, Timestamp_1.TimestampFromJSON)(json['time']),
        'amount': json['amount'],
        'quote': json['quote'],
        'quoteId': json['quoteId'],
        'gasPrice': json['gasPrice'],
        'gasUseEstimate': json['gasUseEstimate'],
        'gasFeeEstimate': json['gasFeeEstimate'],
        'routeString': json['routeString'],
        'methodParameters': json['methodParameters'] == null ? undefined : (0, MethodParameters_1.MethodParametersFromJSON)(json['methodParameters']),
        'route': (json['route'].map(RouteItem_1.RouteItemFromJSON)),
        'orderInfo': json['orderInfo'] == null ? undefined : (0, OrderInfo_1.OrderInfoFromJSON)(json['orderInfo']),
        'encodedOrder': json['encodedOrder'] == null ? undefined : json['encodedOrder'],
        'orderHash': json['orderHash'] == null ? undefined : json['orderHash'],
        'permitData': json['permitData'] == null ? undefined : (0, TypedData_1.TypedDataFromJSON)(json['permitData']),
    };
}
function QuoteResponseToJSON(json) {
    return QuoteResponseToJSONTyped(json, false);
}
function QuoteResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'type': (0, OrderType_1.OrderTypeToJSON)(value['type']),
        'tradeType': (0, TradeType_1.TradeTypeToJSON)(value['tradeType']),
        'time': (0, Timestamp_1.TimestampToJSON)(value['time']),
        'amount': value['amount'],
        'quote': value['quote'],
        'quoteId': value['quoteId'],
        'gasPrice': value['gasPrice'],
        'gasUseEstimate': value['gasUseEstimate'],
        'gasFeeEstimate': value['gasFeeEstimate'],
        'routeString': value['routeString'],
        'methodParameters': (0, MethodParameters_1.MethodParametersToJSON)(value['methodParameters']),
        'route': (value['route'].map(RouteItem_1.RouteItemToJSON)),
        'orderInfo': (0, OrderInfo_1.OrderInfoToJSON)(value['orderInfo']),
        'encodedOrder': value['encodedOrder'],
        'orderHash': value['orderHash'],
        'permitData': (0, TypedData_1.TypedDataToJSON)(value['permitData']),
    };
}
//# sourceMappingURL=QuoteResponse.js.map