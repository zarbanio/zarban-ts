"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfLoansResponse = instanceOfLoansResponse;
exports.LoansResponseFromJSON = LoansResponseFromJSON;
exports.LoansResponseFromJSONTyped = LoansResponseFromJSONTyped;
exports.LoansResponseToJSON = LoansResponseToJSON;
exports.LoansResponseToJSONTyped = LoansResponseToJSONTyped;
const BulletContent_1 = require("./BulletContent");
const Currency_1 = require("./Currency");
const LoanPlan_1 = require("./LoanPlan");
/**
 * Check if a given object implements the LoansResponse interface.
 */
function instanceOfLoansResponse(value) {
    if (!('userId' in value) || value['userId'] === undefined)
        return false;
    if (!('liquidationPrice' in value) || value['liquidationPrice'] === undefined)
        return false;
    if (!('collateral' in value) || value['collateral'] === undefined)
        return false;
    if (!('collateralizationRatio' in value) || value['collateralizationRatio'] === undefined)
        return false;
    if (!('loanToValue' in value) || value['loanToValue'] === undefined)
        return false;
    if (!('debt' in value) || value['debt'] === undefined)
        return false;
    if (!('principal' in value) || value['principal'] === undefined)
        return false;
    if (!('scaledDebt' in value) || value['scaledDebt'] === undefined)
        return false;
    if (!('plan' in value) || value['plan'] === undefined)
        return false;
    if (!('state' in value) || value['state'] === undefined)
        return false;
    return true;
}
function LoansResponseFromJSON(json) {
    return LoansResponseFromJSONTyped(json, false);
}
function LoansResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'userId': json['userId'],
        'liquidationPrice': (0, Currency_1.CurrencyFromJSON)(json['liquidationPrice']),
        'collateral': (0, Currency_1.CurrencyFromJSON)(json['collateral']),
        'collateralizationRatio': json['collateralizationRatio'],
        'loanToValue': json['loanToValue'],
        'debt': (0, Currency_1.CurrencyFromJSON)(json['debt']),
        'principal': (0, Currency_1.CurrencyFromJSON)(json['principal']),
        'scaledDebt': (0, Currency_1.CurrencyFromJSON)(json['scaledDebt']),
        'plan': (0, LoanPlan_1.LoanPlanFromJSON)(json['plan']),
        'state': json['state'],
        'updatedCollateralTokenBalance': json['updatedCollateralTokenBalance'] == null ? undefined : (0, Currency_1.CurrencyFromJSON)(json['updatedCollateralTokenBalance']),
        'updatedDebtTokenBalance': json['updatedDebtTokenBalance'] == null ? undefined : (0, Currency_1.CurrencyFromJSON)(json['updatedDebtTokenBalance']),
        'termsAndConditions': json['termsAndConditions'] == null ? undefined : (0, BulletContent_1.BulletContentFromJSON)(json['termsAndConditions']),
    };
}
function LoansResponseToJSON(json) {
    return LoansResponseToJSONTyped(json, false);
}
function LoansResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'userId': value['userId'],
        'liquidationPrice': (0, Currency_1.CurrencyToJSON)(value['liquidationPrice']),
        'collateral': (0, Currency_1.CurrencyToJSON)(value['collateral']),
        'collateralizationRatio': value['collateralizationRatio'],
        'loanToValue': value['loanToValue'],
        'debt': (0, Currency_1.CurrencyToJSON)(value['debt']),
        'principal': (0, Currency_1.CurrencyToJSON)(value['principal']),
        'scaledDebt': (0, Currency_1.CurrencyToJSON)(value['scaledDebt']),
        'plan': (0, LoanPlan_1.LoanPlanToJSON)(value['plan']),
        'state': value['state'],
        'updatedCollateralTokenBalance': (0, Currency_1.CurrencyToJSON)(value['updatedCollateralTokenBalance']),
        'updatedDebtTokenBalance': (0, Currency_1.CurrencyToJSON)(value['updatedDebtTokenBalance']),
        'termsAndConditions': (0, BulletContent_1.BulletContentToJSON)(value['termsAndConditions']),
    };
}
//# sourceMappingURL=LoansResponse.js.map