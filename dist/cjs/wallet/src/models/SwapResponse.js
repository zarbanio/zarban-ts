"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapResponseTradeTypeEnum = void 0;
exports.instanceOfSwapResponse = instanceOfSwapResponse;
exports.SwapResponseFromJSON = SwapResponseFromJSON;
exports.SwapResponseFromJSONTyped = SwapResponseFromJSONTyped;
exports.SwapResponseToJSON = SwapResponseToJSON;
exports.SwapResponseToJSONTyped = SwapResponseToJSONTyped;
const Symbol_1 = require("./Symbol");
const Currency_1 = require("./Currency");
const Timestamp_1 = require("./Timestamp");
/**
 * @export
 */
exports.SwapResponseTradeTypeEnum = {
    EXACT_INPUT: 'ExactInput',
    EXACT_OUTPUT: 'ExactOutput'
};
/**
 * Check if a given object implements the SwapResponse interface.
 */
function instanceOfSwapResponse(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('tradeType' in value) || value['tradeType'] === undefined)
        return false;
    if (!('_in' in value) || value['_in'] === undefined)
        return false;
    if (!('out' in value) || value['out'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('quote' in value) || value['quote'] === undefined)
        return false;
    if (!('rate' in value) || value['rate'] === undefined)
        return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined)
        return false;
    if (!('expiresAt' in value) || value['expiresAt'] === undefined)
        return false;
    if (!('value' in value) || value['value'] === undefined)
        return false;
    return true;
}
function SwapResponseFromJSON(json) {
    return SwapResponseFromJSONTyped(json, false);
}
function SwapResponseFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'tradeType': json['tradeType'],
        '_in': (0, Symbol_1.SymbolFromJSON)(json['in']),
        'out': (0, Symbol_1.SymbolFromJSON)(json['out']),
        'amount': json['amount'],
        'quote': json['quote'],
        'rate': json['rate'],
        'inputBalanceAfterSwap': json['inputBalanceAfterSwap'] == null ? undefined : json['inputBalanceAfterSwap'],
        'outputBalanceAfterSwap': json['outputBalanceAfterSwap'] == null ? undefined : json['outputBalanceAfterSwap'],
        'createdAt': (0, Timestamp_1.TimestampFromJSON)(json['createdAt']),
        'expiresAt': (0, Timestamp_1.TimestampFromJSON)(json['expiresAt']),
        'executedAt': json['executedAt'] == null ? undefined : (0, Timestamp_1.TimestampFromJSON)(json['executedAt']),
        'value': (0, Currency_1.CurrencyFromJSON)(json['value']),
    };
}
function SwapResponseToJSON(json) {
    return SwapResponseToJSONTyped(json, false);
}
function SwapResponseToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'tradeType': value['tradeType'],
        'in': (0, Symbol_1.SymbolToJSON)(value['_in']),
        'out': (0, Symbol_1.SymbolToJSON)(value['out']),
        'amount': value['amount'],
        'quote': value['quote'],
        'rate': value['rate'],
        'inputBalanceAfterSwap': value['inputBalanceAfterSwap'],
        'outputBalanceAfterSwap': value['outputBalanceAfterSwap'],
        'createdAt': (0, Timestamp_1.TimestampToJSON)(value['createdAt']),
        'expiresAt': (0, Timestamp_1.TimestampToJSON)(value['expiresAt']),
        'executedAt': (0, Timestamp_1.TimestampToJSON)(value['executedAt']),
        'value': (0, Currency_1.CurrencyToJSON)(value['value']),
    };
}
//# sourceMappingURL=SwapResponse.js.map