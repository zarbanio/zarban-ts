"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfLoanPlan = instanceOfLoanPlan;
exports.LoanPlanFromJSON = LoanPlanFromJSON;
exports.LoanPlanFromJSONTyped = LoanPlanFromJSONTyped;
exports.LoanPlanToJSON = LoanPlanToJSON;
exports.LoanPlanToJSONTyped = LoanPlanToJSONTyped;
const Coin_1 = require("./Coin");
const Currency_1 = require("./Currency");
const DetailedLoanToValueOptions_1 = require("./DetailedLoanToValueOptions");
/**
 * Check if a given object implements the LoanPlan interface.
 */
function instanceOfLoanPlan(value) {
    if (!('name' in value) || value['name'] === undefined)
        return false;
    if (!('minCollateralizationRatio' in value) || value['minCollateralizationRatio'] === undefined)
        return false;
    if (!('acceptableCoins' in value) || value['acceptableCoins'] === undefined)
        return false;
    if (!('fee' in value) || value['fee'] === undefined)
        return false;
    if (!('maxDebt' in value) || value['maxDebt'] === undefined)
        return false;
    if (!('minDebt' in value) || value['minDebt'] === undefined)
        return false;
    if (!('loanToValueOptions' in value) || value['loanToValueOptions'] === undefined)
        return false;
    return true;
}
function LoanPlanFromJSON(json) {
    return LoanPlanFromJSONTyped(json, false);
}
function LoanPlanFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'name': json['name'],
        'minCollateralizationRatio': json['minCollateralizationRatio'],
        'acceptableCoins': (json['acceptableCoins'].map(Coin_1.CoinFromJSON)),
        'fee': json['fee'],
        'maxDebt': (0, Currency_1.CurrencyFromJSON)(json['maxDebt']),
        'minDebt': (0, Currency_1.CurrencyFromJSON)(json['minDebt']),
        'loanToValueOptions': (json['loanToValueOptions'].map(DetailedLoanToValueOptions_1.DetailedLoanToValueOptionsFromJSON)),
    };
}
function LoanPlanToJSON(json) {
    return LoanPlanToJSONTyped(json, false);
}
function LoanPlanToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'name': value['name'],
        'minCollateralizationRatio': value['minCollateralizationRatio'],
        'acceptableCoins': (value['acceptableCoins'].map(Coin_1.CoinToJSON)),
        'fee': value['fee'],
        'maxDebt': (0, Currency_1.CurrencyToJSON)(value['maxDebt']),
        'minDebt': (0, Currency_1.CurrencyToJSON)(value['minDebt']),
        'loanToValueOptions': (value['loanToValueOptions'].map(DetailedLoanToValueOptions_1.DetailedLoanToValueOptionsToJSON)),
    };
}
//# sourceMappingURL=LoanPlan.js.map