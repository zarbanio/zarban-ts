"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LoanCreateRequestIntentEnum = void 0;
exports.instanceOfLoanCreateRequest = instanceOfLoanCreateRequest;
exports.LoanCreateRequestFromJSON = LoanCreateRequestFromJSON;
exports.LoanCreateRequestFromJSONTyped = LoanCreateRequestFromJSONTyped;
exports.LoanCreateRequestToJSON = LoanCreateRequestToJSON;
exports.LoanCreateRequestToJSONTyped = LoanCreateRequestToJSONTyped;
const LoanToValueOptions_1 = require("./LoanToValueOptions");
/**
 * @export
 */
exports.LoanCreateRequestIntentEnum = {
    CREATE: 'create',
    PREVIEW: 'preview'
};
/**
 * Check if a given object implements the LoanCreateRequest interface.
 */
function instanceOfLoanCreateRequest(value) {
    if (!('intent' in value) || value['intent'] === undefined)
        return false;
    if (!('planName' in value) || value['planName'] === undefined)
        return false;
    if (!('symbol' in value) || value['symbol'] === undefined)
        return false;
    if (!('loanToValueOption' in value) || value['loanToValueOption'] === undefined)
        return false;
    return true;
}
function LoanCreateRequestFromJSON(json) {
    return LoanCreateRequestFromJSONTyped(json, false);
}
function LoanCreateRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'intent': json['intent'],
        'planName': json['planName'],
        'collateral': json['collateral'] == null ? undefined : json['collateral'],
        'debt': json['debt'] == null ? undefined : json['debt'],
        'symbol': json['symbol'],
        'loanToValueOption': (0, LoanToValueOptions_1.LoanToValueOptionsFromJSON)(json['loanToValueOption']),
    };
}
function LoanCreateRequestToJSON(json) {
    return LoanCreateRequestToJSONTyped(json, false);
}
function LoanCreateRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'intent': value['intent'],
        'planName': value['planName'],
        'collateral': value['collateral'],
        'debt': value['debt'],
        'symbol': value['symbol'],
        'loanToValueOption': (0, LoanToValueOptions_1.LoanToValueOptionsToJSON)(value['loanToValueOption']),
    };
}
//# sourceMappingURL=LoanCreateRequest.js.map