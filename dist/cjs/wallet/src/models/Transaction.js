"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionDirectionEnum = void 0;
exports.instanceOfTransaction = instanceOfTransaction;
exports.TransactionFromJSON = TransactionFromJSON;
exports.TransactionFromJSONTyped = TransactionFromJSONTyped;
exports.TransactionToJSON = TransactionToJSON;
exports.TransactionToJSONTyped = TransactionToJSONTyped;
const TransactionType_1 = require("./TransactionType");
const ExternalTransaction_1 = require("./ExternalTransaction");
const Symbol_1 = require("./Symbol");
const Currency_1 = require("./Currency");
const Timestamp_1 = require("./Timestamp");
/**
 * @export
 */
exports.TransactionDirectionEnum = {
    INBOUND: 'Inbound',
    OUTBOUND: 'Outbound'
};
/**
 * Check if a given object implements the Transaction interface.
 */
function instanceOfTransaction(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('time' in value) || value['time'] === undefined)
        return false;
    if (!('type' in value) || value['type'] === undefined)
        return false;
    if (!('from' in value) || value['from'] === undefined)
        return false;
    if (!('to' in value) || value['to'] === undefined)
        return false;
    if (!('symbol' in value) || value['symbol'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('direction' in value) || value['direction'] === undefined)
        return false;
    return true;
}
function TransactionFromJSON(json) {
    return TransactionFromJSONTyped(json, false);
}
function TransactionFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'time': (0, Timestamp_1.TimestampFromJSON)(json['time']),
        'type': (0, TransactionType_1.TransactionTypeFromJSON)(json['type']),
        'from': json['from'],
        'to': json['to'],
        'symbol': (0, Symbol_1.SymbolFromJSON)(json['symbol']),
        'amount': (0, Currency_1.CurrencyFromJSON)(json['amount']),
        'direction': json['direction'],
        'externalTransaction': json['externalTransaction'] == null ? undefined : (0, ExternalTransaction_1.ExternalTransactionFromJSON)(json['externalTransaction']),
    };
}
function TransactionToJSON(json) {
    return TransactionToJSONTyped(json, false);
}
function TransactionToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'time': (0, Timestamp_1.TimestampToJSON)(value['time']),
        'type': (0, TransactionType_1.TransactionTypeToJSON)(value['type']),
        'from': value['from'],
        'to': value['to'],
        'symbol': (0, Symbol_1.SymbolToJSON)(value['symbol']),
        'amount': (0, Currency_1.CurrencyToJSON)(value['amount']),
        'direction': value['direction'],
        'externalTransaction': (0, ExternalTransaction_1.ExternalTransactionToJSON)(value['externalTransaction']),
    };
}
//# sourceMappingURL=Transaction.js.map