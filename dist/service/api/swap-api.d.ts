/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { QuoteRequest } from '../model';
import type { QuoteResponse } from '../model';
/**
 * SwapApi - axios parameter creator
 * @export
 */
export declare const SwapApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get a quote for a swap
     * @summary Get a quote for a swap
     * @param {QuoteRequest} quoteRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapQuote: (quoteRequest: QuoteRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SwapApi - functional programming interface
 * @export
 */
export declare const SwapApiFp: (configuration?: Configuration) => {
    /**
     * Get a quote for a swap
     * @summary Get a quote for a swap
     * @param {QuoteRequest} quoteRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapQuote(quoteRequest: QuoteRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<QuoteResponse>>;
};
/**
 * SwapApi - factory interface
 * @export
 */
export declare const SwapApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get a quote for a swap
     * @summary Get a quote for a swap
     * @param {QuoteRequest} quoteRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSwapQuote(quoteRequest: QuoteRequest, options?: RawAxiosRequestConfig): AxiosPromise<QuoteResponse>;
};
/**
 * SwapApi - interface
 * @export
 * @interface SwapApi
 */
export interface SwapApiInterface {
    /**
     * Get a quote for a swap
     * @summary Get a quote for a swap
     * @param {QuoteRequest} quoteRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapApiInterface
     */
    getSwapQuote(quoteRequest: QuoteRequest, options?: RawAxiosRequestConfig): AxiosPromise<QuoteResponse>;
}
/**
 * SwapApi - object-oriented interface
 * @export
 * @class SwapApi
 * @extends {BaseAPI}
 */
export declare class SwapApi extends BaseAPI implements SwapApiInterface {
    /**
     * Get a quote for a swap
     * @summary Get a quote for a swap
     * @param {QuoteRequest} quoteRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SwapApi
     */
    getSwapQuote(quoteRequest: QuoteRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<QuoteResponse, any>>;
}
//# sourceMappingURL=swap-api.d.ts.map