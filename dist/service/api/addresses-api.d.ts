/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { AddressResponse } from '../model';
/**
 * AddressesApi - axios parameter creator
 * @export
 */
export declare const AddressesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * All addresses knows to Zarban.
     * @summary Get all addresses
     * @param {string} [format] The type of addresses to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllAddresses: (format?: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AddressesApi - functional programming interface
 * @export
 */
export declare const AddressesApiFp: (configuration?: Configuration) => {
    /**
     * All addresses knows to Zarban.
     * @summary Get all addresses
     * @param {string} [format] The type of addresses to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllAddresses(format?: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AddressResponse>>;
};
/**
 * AddressesApi - factory interface
 * @export
 */
export declare const AddressesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * All addresses knows to Zarban.
     * @summary Get all addresses
     * @param {string} [format] The type of addresses to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAllAddresses(format?: string, options?: RawAxiosRequestConfig): AxiosPromise<AddressResponse>;
};
/**
 * AddressesApi - interface
 * @export
 * @interface AddressesApi
 */
export interface AddressesApiInterface {
    /**
     * All addresses knows to Zarban.
     * @summary Get all addresses
     * @param {string} [format] The type of addresses to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApiInterface
     */
    getAllAddresses(format?: string, options?: RawAxiosRequestConfig): AxiosPromise<AddressResponse>;
}
/**
 * AddressesApi - object-oriented interface
 * @export
 * @class AddressesApi
 * @extends {BaseAPI}
 */
export declare class AddressesApi extends BaseAPI implements AddressesApiInterface {
    /**
     * All addresses knows to Zarban.
     * @summary Get all addresses
     * @param {string} [format] The type of addresses to return
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AddressesApi
     */
    getAllAddresses(format?: string, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<AddressResponse, any>>;
}
