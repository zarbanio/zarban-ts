/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { EventDetailsResponse } from '../model';
/**
 * LogsApi - axios parameter creator
 * @export
 */
export declare const LogsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get raw and decoded logs by transaction hash
     * @summary Get raw and decoded logs by transaction hash
     * @param {string} txHash Transaction hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLogsByTransactionHash: (txHash: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * LogsApi - functional programming interface
 * @export
 */
export declare const LogsApiFp: (configuration?: Configuration) => {
    /**
     * Get raw and decoded logs by transaction hash
     * @summary Get raw and decoded logs by transaction hash
     * @param {string} txHash Transaction hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLogsByTransactionHash(txHash: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<EventDetailsResponse>>;
};
/**
 * LogsApi - factory interface
 * @export
 */
export declare const LogsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get raw and decoded logs by transaction hash
     * @summary Get raw and decoded logs by transaction hash
     * @param {string} txHash Transaction hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getLogsByTransactionHash(txHash: string, options?: RawAxiosRequestConfig): AxiosPromise<EventDetailsResponse>;
};
/**
 * LogsApi - interface
 * @export
 * @interface LogsApi
 */
export interface LogsApiInterface {
    /**
     * Get raw and decoded logs by transaction hash
     * @summary Get raw and decoded logs by transaction hash
     * @param {string} txHash Transaction hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogsApiInterface
     */
    getLogsByTransactionHash(txHash: string, options?: RawAxiosRequestConfig): AxiosPromise<EventDetailsResponse>;
}
/**
 * LogsApi - object-oriented interface
 * @export
 * @class LogsApi
 * @extends {BaseAPI}
 */
export declare class LogsApi extends BaseAPI implements LogsApiInterface {
    /**
     * Get raw and decoded logs by transaction hash
     * @summary Get raw and decoded logs by transaction hash
     * @param {string} txHash Transaction hash
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof LogsApi
     */
    getLogsByTransactionHash(txHash: string, options?: RawAxiosRequestConfig): Promise<globalAxios.AxiosResponse<EventDetailsResponse, any>>;
}
//# sourceMappingURL=logs-api.d.ts.map