"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfVault = instanceOfVault;
exports.VaultFromJSON = VaultFromJSON;
exports.VaultFromJSONTyped = VaultFromJSONTyped;
exports.VaultToJSON = VaultToJSON;
exports.VaultToJSONTyped = VaultToJSONTyped;
const Ilk_1 = require("./Ilk");
/**
 * Check if a given object implements the Vault interface.
 */
function instanceOfVault(value) {
    if (!('id' in value) || value['id'] === undefined)
        return false;
    if (!('owner' in value) || value['owner'] === undefined)
        return false;
    if (!('urn' in value) || value['urn'] === undefined)
        return false;
    if (!('liquidationPrice' in value) || value['liquidationPrice'] === undefined)
        return false;
    if (!('collateralLocked' in value) || value['collateralLocked'] === undefined)
        return false;
    if (!('collateralizationRatio' in value) || value['collateralizationRatio'] === undefined)
        return false;
    if (!('loanToValue' in value) || value['loanToValue'] === undefined)
        return false;
    if (!('debt' in value) || value['debt'] === undefined)
        return false;
    if (!('availableToWithdraw' in value) || value['availableToWithdraw'] === undefined)
        return false;
    if (!('availableToMint' in value) || value['availableToMint'] === undefined)
        return false;
    if (!('ilk' in value) || value['ilk'] === undefined)
        return false;
    return true;
}
function VaultFromJSON(json) {
    return VaultFromJSONTyped(json, false);
}
function VaultFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'],
        'owner': json['owner'],
        'urn': json['urn'],
        'liquidationPrice': json['liquidationPrice'],
        'collateralLocked': json['collateralLocked'],
        'collateralizationRatio': json['collateralizationRatio'],
        'loanToValue': json['loanToValue'],
        'debt': json['debt'],
        'availableToWithdraw': json['availableToWithdraw'],
        'availableToMint': json['availableToMint'],
        'ilk': (0, Ilk_1.IlkFromJSON)(json['ilk']),
    };
}
function VaultToJSON(json) {
    return VaultToJSONTyped(json, false);
}
function VaultToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'owner': value['owner'],
        'urn': value['urn'],
        'liquidationPrice': value['liquidationPrice'],
        'collateralLocked': value['collateralLocked'],
        'collateralizationRatio': value['collateralizationRatio'],
        'loanToValue': value['loanToValue'],
        'debt': value['debt'],
        'availableToWithdraw': value['availableToWithdraw'],
        'availableToMint': value['availableToMint'],
        'ilk': (0, Ilk_1.IlkToJSON)(value['ilk']),
    };
}
//# sourceMappingURL=Vault.js.map