"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfQuoteRequest = instanceOfQuoteRequest;
exports.QuoteRequestFromJSON = QuoteRequestFromJSON;
exports.QuoteRequestFromJSONTyped = QuoteRequestFromJSONTyped;
exports.QuoteRequestToJSON = QuoteRequestToJSON;
exports.QuoteRequestToJSONTyped = QuoteRequestToJSONTyped;
const OrderType_1 = require("./OrderType");
const QuoteRequestOptions_1 = require("./QuoteRequestOptions");
const TradeType_1 = require("./TradeType");
/**
 * Check if a given object implements the QuoteRequest interface.
 */
function instanceOfQuoteRequest(value) {
    if (!('tradeType' in value) || value['tradeType'] === undefined)
        return false;
    if (!('inputToken' in value) || value['inputToken'] === undefined)
        return false;
    if (!('outputToken' in value) || value['outputToken'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('recipient' in value) || value['recipient'] === undefined)
        return false;
    return true;
}
function QuoteRequestFromJSON(json) {
    return QuoteRequestFromJSONTyped(json, false);
}
function QuoteRequestFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'requestId': json['requestId'] == null ? undefined : json['requestId'],
        'type': json['type'] == null ? undefined : (0, OrderType_1.OrderTypeFromJSON)(json['type']),
        'tradeType': (0, TradeType_1.TradeTypeFromJSON)(json['tradeType']),
        'inputToken': json['inputToken'],
        'outputToken': json['outputToken'],
        'amount': json['amount'],
        'recipient': json['recipient'],
        'options': json['options'] == null ? undefined : (0, QuoteRequestOptions_1.QuoteRequestOptionsFromJSON)(json['options']),
    };
}
function QuoteRequestToJSON(json) {
    return QuoteRequestToJSONTyped(json, false);
}
function QuoteRequestToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'requestId': value['requestId'],
        'type': (0, OrderType_1.OrderTypeToJSON)(value['type']),
        'tradeType': (0, TradeType_1.TradeTypeToJSON)(value['tradeType']),
        'inputToken': value['inputToken'],
        'outputToken': value['outputToken'],
        'amount': value['amount'],
        'recipient': value['recipient'],
        'options': (0, QuoteRequestOptions_1.QuoteRequestOptionsToJSON)(value['options']),
    };
}
//# sourceMappingURL=QuoteRequest.js.map