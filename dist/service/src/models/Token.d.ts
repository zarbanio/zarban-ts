/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Symbol } from './Symbol';
/**
 *
 * @export
 * @interface Token
 */
export interface Token {
    /**
     * The name of the token.
     * @type {string}
     * @memberof Token
     */
    name: string;
    /**
     *
     * @type {Symbol}
     * @memberof Token
     */
    symbol: Symbol;
    /**
     * The number of decimals for the token.
     * @type {number}
     * @memberof Token
     */
    decimals: number;
    /**
     * The Ethereum address of the token.
     * @type {string}
     * @memberof Token
     */
    address: string;
    /**
     * The URI of the token's logo.
     * @type {string}
     * @memberof Token
     */
    logoUri: string;
    /**
     * The chain ID of the token.
     * @type {number}
     * @memberof Token
     */
    chainId: number;
    /**
     * The Persian name of the token.
     * @type {string}
     * @memberof Token
     */
    persianName: string;
}
/**
 * Check if a given object implements the Token interface.
 */
export declare function instanceOfToken(value: object): value is Token;
export declare function TokenFromJSON(json: any): Token;
export declare function TokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): Token;
export declare function TokenToJSON(json: any): Token;
export declare function TokenToJSONTyped(value?: Token | null, ignoreDiscriminator?: boolean): any;
//# sourceMappingURL=Token.d.ts.map