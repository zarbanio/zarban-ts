"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban API
 * API for Zarban services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderOrderTypeEnum = exports.OrderOrderStatusEnum = void 0;
exports.instanceOfOrder = instanceOfOrder;
exports.OrderFromJSON = OrderFromJSON;
exports.OrderFromJSONTyped = OrderFromJSONTyped;
exports.OrderToJSON = OrderToJSON;
exports.OrderToJSONTyped = OrderToJSONTyped;
const RawDutchAmount_1 = require("./RawDutchAmount");
/**
 * @export
 */
exports.OrderOrderStatusEnum = {
    OPEN: 'open',
    EXPIRED: 'expired',
    ERROR: 'error',
    CANCELLED: 'cancelled',
    FILLED: 'filled',
    INSUFFICIENT_FUNDS: 'insufficient-funds'
};
/**
 * @export
 */
exports.OrderOrderTypeEnum = {
    DUTCH: 'dutch',
    LIMIT: 'limit'
};
/**
 * Check if a given object implements the Order interface.
 */
function instanceOfOrder(value) {
    if (!('outputs' in value) || value['outputs'] === undefined)
        return false;
    if (!('encodedOrder' in value) || value['encodedOrder'] === undefined)
        return false;
    if (!('signature' in value) || value['signature'] === undefined)
        return false;
    if (!('input' in value) || value['input'] === undefined)
        return false;
    if (!('orderStatus' in value) || value['orderStatus'] === undefined)
        return false;
    if (!('chainId' in value) || value['chainId'] === undefined)
        return false;
    if (!('orderHash' in value) || value['orderHash'] === undefined)
        return false;
    if (!('orderType' in value) || value['orderType'] === undefined)
        return false;
    return true;
}
function OrderFromJSON(json) {
    return OrderFromJSONTyped(json, false);
}
function OrderFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'quoteId': json['quoteId'] == null ? undefined : json['quoteId'],
        'outputs': (json['outputs'].map(RawDutchAmount_1.RawDutchAmountFromJSON)),
        'encodedOrder': json['encodedOrder'],
        'signature': json['signature'],
        'input': (0, RawDutchAmount_1.RawDutchAmountFromJSON)(json['input']),
        'orderStatus': json['orderStatus'],
        'chainId': json['chainId'],
        'orderHash': json['orderHash'],
        'orderType': json['orderType'],
    };
}
function OrderToJSON(json) {
    return OrderToJSONTyped(json, false);
}
function OrderToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'quoteId': value['quoteId'],
        'outputs': (value['outputs'].map(RawDutchAmount_1.RawDutchAmountToJSON)),
        'encodedOrder': value['encodedOrder'],
        'signature': value['signature'],
        'input': (0, RawDutchAmount_1.RawDutchAmountToJSON)(value['input']),
        'orderStatus': value['orderStatus'],
        'chainId': value['chainId'],
        'orderHash': value['orderHash'],
        'orderType': value['orderType'],
    };
}
//# sourceMappingURL=Order.js.map