/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from '../configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import { type RequestArgs, BaseAPI } from '../base';
import type { Balance } from '../model';
import type { Symbol } from '../model';
import type { WalletBalance } from '../model';
/**
 * BalanceApi - axios parameter creator
 * @export
 */
export declare const BalanceApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get the balance by a symbol.
     * @summary Get balance
     * @param {Symbol} symbol Coin symbol
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalanceBySymbol: (symbol: Symbol, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get the balance of the wallet.
     * @summary Get wallet balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletBalance: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * BalanceApi - functional programming interface
 * @export
 */
export declare const BalanceApiFp: (configuration?: Configuration) => {
    /**
     * Get the balance by a symbol.
     * @summary Get balance
     * @param {Symbol} symbol Coin symbol
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalanceBySymbol(symbol: Symbol, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Balance>>;
    /**
     * Get the balance of the wallet.
     * @summary Get wallet balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletBalance(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WalletBalance>>;
};
/**
 * BalanceApi - factory interface
 * @export
 */
export declare const BalanceApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get the balance by a symbol.
     * @summary Get balance
     * @param {Symbol} symbol Coin symbol
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getBalanceBySymbol(symbol: Symbol, options?: RawAxiosRequestConfig): AxiosPromise<Balance>;
    /**
     * Get the balance of the wallet.
     * @summary Get wallet balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getWalletBalance(options?: RawAxiosRequestConfig): AxiosPromise<WalletBalance>;
};
/**
 * BalanceApi - interface
 * @export
 * @interface BalanceApi
 */
export interface BalanceApiInterface {
    /**
     * Get the balance by a symbol.
     * @summary Get balance
     * @param {Symbol} symbol Coin symbol
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalanceApiInterface
     */
    getBalanceBySymbol(symbol: Symbol, options?: RawAxiosRequestConfig): AxiosPromise<Balance>;
    /**
     * Get the balance of the wallet.
     * @summary Get wallet balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalanceApiInterface
     */
    getWalletBalance(options?: RawAxiosRequestConfig): AxiosPromise<WalletBalance>;
}
/**
 * BalanceApi - object-oriented interface
 * @export
 * @class BalanceApi
 * @extends {BaseAPI}
 */
export declare class BalanceApi extends BaseAPI implements BalanceApiInterface {
    /**
     * Get the balance by a symbol.
     * @summary Get balance
     * @param {Symbol} symbol Coin symbol
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalanceApi
     */
    getBalanceBySymbol(symbol: Symbol, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<Balance, any>>;
    /**
     * Get the balance of the wallet.
     * @summary Get wallet balance
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BalanceApi
     */
    getWalletBalance(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<WalletBalance, any>>;
}
