"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfWithdrawRequestPreview = instanceOfWithdrawRequestPreview;
exports.WithdrawRequestPreviewFromJSON = WithdrawRequestPreviewFromJSON;
exports.WithdrawRequestPreviewFromJSONTyped = WithdrawRequestPreviewFromJSONTyped;
exports.WithdrawRequestPreviewToJSON = WithdrawRequestPreviewToJSON;
exports.WithdrawRequestPreviewToJSONTyped = WithdrawRequestPreviewToJSONTyped;
const Symbol_1 = require("./Symbol");
const Currency_1 = require("./Currency");
const Network_1 = require("./Network");
/**
 * Check if a given object implements the WithdrawRequestPreview interface.
 */
function instanceOfWithdrawRequestPreview(value) {
    if (!('address' in value) || value['address'] === undefined)
        return false;
    if (!('network' in value) || value['network'] === undefined)
        return false;
    if (!('symbol' in value) || value['symbol'] === undefined)
        return false;
    if (!('amount' in value) || value['amount'] === undefined)
        return false;
    if (!('fee' in value) || value['fee'] === undefined)
        return false;
    if (!('balanceAfterWithdraw' in value) || value['balanceAfterWithdraw'] === undefined)
        return false;
    return true;
}
function WithdrawRequestPreviewFromJSON(json) {
    return WithdrawRequestPreviewFromJSONTyped(json, false);
}
function WithdrawRequestPreviewFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'address': json['address'],
        'network': (0, Network_1.NetworkFromJSON)(json['network']),
        'symbol': (0, Symbol_1.SymbolFromJSON)(json['symbol']),
        'amount': (0, Currency_1.CurrencyFromJSON)(json['amount']),
        'fee': (0, Currency_1.CurrencyFromJSON)(json['fee']),
        'balanceAfterWithdraw': (0, Currency_1.CurrencyFromJSON)(json['balanceAfterWithdraw']),
    };
}
function WithdrawRequestPreviewToJSON(json) {
    return WithdrawRequestPreviewToJSONTyped(json, false);
}
function WithdrawRequestPreviewToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'address': value['address'],
        'network': (0, Network_1.NetworkToJSON)(value['network']),
        'symbol': (0, Symbol_1.SymbolToJSON)(value['symbol']),
        'amount': (0, Currency_1.CurrencyToJSON)(value['amount']),
        'fee': (0, Currency_1.CurrencyToJSON)(value['fee']),
        'balanceAfterWithdraw': (0, Currency_1.CurrencyToJSON)(value['balanceAfterWithdraw']),
    };
}
//# sourceMappingURL=WithdrawRequestPreview.js.map