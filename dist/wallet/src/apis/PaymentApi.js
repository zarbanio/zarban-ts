"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Zarban Wallet API
 * API for Zarban wallet services.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: info@zarban.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentApi = void 0;
const tslib_1 = require("tslib");
const runtime = tslib_1.__importStar(require("../runtime"));
const index_1 = require("../models/index");
/**
 *
 */
class PaymentApi extends runtime.BaseAPI {
    /**
     * Create a new payment.
     * Create a payment
     */
    async createPaymentRaw(requestParameters, initOverrides) {
        if (requestParameters['paymentRequest'] == null) {
            throw new runtime.RequiredError('paymentRequest', 'Required parameter "paymentRequest" was null or undefined when calling createPayment().');
        }
        const queryParameters = {};
        const headerParameters = {};
        headerParameters['Content-Type'] = 'application/json';
        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearerAuth", []);
            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/payments`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: (0, index_1.PaymentRequestToJSON)(requestParameters['paymentRequest']),
        }, initOverrides);
        return new runtime.JSONApiResponse(response, (jsonValue) => (0, index_1.PaymentFromJSON)(jsonValue));
    }
    /**
     * Create a new payment.
     * Create a payment
     */
    async createPayment(requestParameters, initOverrides) {
        const response = await this.createPaymentRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
exports.PaymentApi = PaymentApi;
//# sourceMappingURL=PaymentApi.js.map